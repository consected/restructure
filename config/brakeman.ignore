{
  "ignored_warnings": [
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "1ef406f7ae232b6060832fc9f74de3c73debb32b49384ef77a63c8e5338379b0",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/admin/migration_generator.rb",
      "line": 42,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connection.execute(\"select table_schema \\\"schema_name\\\", table_name from information_schema.tables\\nwhere table_schema IN (#{quoted_schemas})\\nand table_catalog = '#{current_database}'\\nUNION\\nselect table_schema \\\"schema_name\\\", table_name from information_schema.views\\nwhere table_schema IN (#{quoted_schemas})\\nand table_catalog = '#{current_database}'\\norder by \\\"schema_name\\\", table_name\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::MigrationGenerator",
        "method": "Admin::MigrationGenerator.tables_and_views"
      },
      "user_input": "quoted_schemas",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Mass Assignment",
      "warning_code": 70,
      "fingerprint": "2784ca78e0e2edce2a830bf31905df4ea527922a540481ffa3440208782b5cdf",
      "check_name": "MassAssignment",
      "message": "Specify exact keys allowed for mass assignment instead of using `permit!` which allows any keys",
      "file": "app/controllers/concerns/master_handler.rb",
      "line": 181,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params.permit!",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "MasterHandler",
        "method": "index_cache_key"
      },
      "user_input": null,
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "3c5e6a5b7b311bb51b49c35ff669a55b2ac5f277738e7d6ab4db258ed43779f8",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "lib/active_record/migration/app_generator.rb",
      "line": 269,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.execute(\"DROP FUNCTION IF EXISTS #{calc_trigger_fn_name(table_name)}() CASCADE\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ActiveRecord::Migration",
        "method": "update_table_name"
      },
      "user_input": "calc_trigger_fn_name(table_name)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "4043158de8e943fbaaf39db923ffafff5f1c747067355597790d51d2d7978547",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped parameter value",
      "file": "app/views/page_layouts/show.html.erb",
      "line": 47,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "((active_layouts.find(params[:id]) or active_layouts.where(:panel_name => params[:id]).first).view_css.classes.map do\n styles = v.map do\n \"#{s.to_s.hyphenate}: #{v};\"\n end\n\"#{\"##{\"standalone-page-container-#{SecureRandom.hex}\"}\"} .#{c} {  #{v.map do\n \"#{s.to_s.hyphenate}: #{v};\"\n end.join(\" \")}}\"\n end or ([] + (active_layouts.find(params[:id]) or active_layouts.where(:panel_name => params[:id]).first).view_css.selectors.map do\n cs = c.to_s.split(\",\").map do\n \"#{\"##{\"standalone-page-container-#{SecureRandom.hex}\"}\"} #{c1}\"\n end.join(\", \")\nstyles = v.map do\n \"#{s.to_s.hyphenate}: #{v};\"\n end\n\"#{c.to_s.split(\",\").map do\n \"#{\"##{\"standalone-page-container-#{SecureRandom.hex}\"}\"} #{c1}\"\n end.join(\", \")} {  #{v.map do\n \"#{s.to_s.hyphenate}: #{v};\"\n end.join(\" \")}}\"\n end)).join(\"\\n\")",
      "render_path": [
        {
          "type": "controller",
          "class": "PageLayoutsController",
          "method": "show",
          "line": 17,
          "file": "app/controllers/page_layouts_controller.rb",
          "rendered": {
            "name": "page_layouts/show",
            "file": "app/views/page_layouts/show.html.erb"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "page_layouts/show"
      },
      "user_input": "params[:id]",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "Mass Assignment",
      "warning_code": 70,
      "fingerprint": "4175d525dd3543dcab5b9c3e569d9f4676238aa0e39ea4193bf55958c10aeb99",
      "check_name": "MassAssignment",
      "message": "Specify exact keys allowed for mass assignment instead of using `permit!` which allows any keys",
      "file": "app/controllers/reports_controller.rb",
      "line": 413,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params.require(:search_attrs).permit!",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ReportsController",
        "method": "search_attrs_params_hash"
      },
      "user_input": null,
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "4e620104bf32818bad9633273c4b28a3a002de5e735fc35ec1116cb1cf08c2bb",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/concerns/calc_actions.rb",
      "line": 391,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "@condition_scope.order(:id => :desc).limit(1).reorder(\"#{UserBase.clean_table_name(ModelReference.record_type_to_table_name(@this_val_where[:table_name]))}.id desc\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "CalcActions",
        "method": "calc_return_types"
      },
      "user_input": "UserBase.clean_table_name(ModelReference.record_type_to_table_name(@this_val_where[:table_name]))",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "59c285b5703ac625f55ffc74ee67f64196a2d363d7e955d5fdb98e69a8f79c5f",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/admin/migration_generator.rb",
      "line": 92,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connection.execute(\"        SELECT\\n            cols.table_schema \\\"schema_name\\\",\\n            cols.table_name,\\n            cols.column_name,\\n            pg_catalog.col_description(c.oid, cols.ordinal_position::int) AS column_comment\\n        FROM\\n            information_schema.columns cols\\n        INNER JOIN pg_catalog.pg_class c\\n        ON\\n          c.oid = ('\\\"' || cols.table_name || '\\\"')::regclass::oid\\n          AND c.relname = cols.table_name\\n\\n        WHERE\\n            cols.table_catalog = '#{current_database}' AND\\n            cols.table_schema IN (#{quoted_schemas}) AND\\n            pg_catalog.col_description(c.oid, cols.ordinal_position::int) IS NOT NULL\\n        ;\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::MigrationGenerator",
        "method": "Admin::MigrationGenerator.column_comments"
      },
      "user_input": "current_database",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Mass Assignment",
      "warning_code": 70,
      "fingerprint": "636708f4c9842c831cfbeb696abb245d35c8fe414d9edec6b91f4b016c77fff0",
      "check_name": "MassAssignment",
      "message": "Specify exact keys allowed for mass assignment instead of using `permit!` which allows any keys",
      "file": "app/controllers/masters_controller.rb",
      "line": 154,
      "link": "https://brakemanscanner.org/docs/warning_types/mass_assignment/",
      "code": "params.except(:utf8, :controller, :action).permit!",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "MastersController",
        "method": "search_params"
      },
      "user_input": null,
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "677d542b9894e79e332d14a4b1eee8edbdd0b368a1ec5ca21eb9524e2213381f",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/dynamic/external_id_implementer.rb",
      "line": 211,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connection.execute((\"INSERT into #{table_name} (#{external_id_attribute}, admin_id, master_id, created_at, updated_at) VALUES \" + [\"('#{generate_random_id}', #{admin.id}, #{m}, '#{DateTime.now.iso8601}', '#{DateTime.now.iso8601}')\"].join(\",\")))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Dynamic::ExternalIdImplementer",
        "method": "generate_ids_for_all_masters"
      },
      "user_input": "[\"('#{generate_random_id}', #{admin.id}, #{m}, '#{DateTime.now.iso8601}', '#{DateTime.now.iso8601}')\"].join(\",\")",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "735d9b84f6fdd9c36661cd08ce04e8139f00da74b428c97a0c08a0ce012898ff",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/nfs_store/utils/mime_type.rb",
      "line": 12,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "`file --mime-type -b '#{full_file_path}'`",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "NfsStore::Utils::MimeType",
        "method": "NfsStore::Utils::MimeType.full_mime_type"
      },
      "user_input": "full_file_path",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "79bbbfcbfefe638e9c9e7edda0ea14d0cc2f4bcc59f54e4435b43bdfaa38b943",
      "check_name": "FileAccess",
      "message": "Model attribute used in file name",
      "file": "app/models/admin/app_type_export.rb",
      "line": 97,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "FileUtils.rm_rf(Admin::MigrationGenerator.new(default_schema_name).db_migration_dirname(\"app-export\"))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::AppTypeExport",
        "method": "clean_export_dir"
      },
      "user_input": "Admin::MigrationGenerator.new(default_schema_name).db_migration_dirname(\"app-export\")",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "ad0cdcb9b169f2245a85a2d64bec0940fd13304c7b80e5aa950ccbd620b85b27",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/model_reference.rb",
      "line": 194,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ModelReference.joins(\"INNER JOIN #{ModelReference.record_type_to_table_name(to_record_class_for_type(to_record_type).name.ns_underscore.pluralize)} ON model_references.to_record_id = #{ModelReference.record_type_to_table_name(to_record_class_for_type(to_record_type).name.ns_underscore.pluralize)}.id\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ModelReference",
        "method": "ModelReference.find_references"
      },
      "user_input": "ModelReference.record_type_to_table_name(to_record_class_for_type(to_record_type).name.ns_underscore.pluralize)",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "b1e62cc85c7eba4c9f39f2f82936341481bc4da5ada4a7d0df55ace601f34a06",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/controllers/admin/nfs_store/filter/filters_controller.rb",
      "line": 28,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"app_type_id asc, translate(resource_name, '__', 'ZZZZ') asc, #{Admin::UserAccessControl.priority_order}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::NfsStore::Filter::FiltersController",
        "method": "default_index_order"
      },
      "user_input": "Admin::UserAccessControl.priority_order",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "b225d0c4d79de98de44ce62d82868d021cfacd1d9a5bb34251cb389078c1bd29",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "lib/active_record/migration/app_generator.rb",
      "line": 46,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.execute((\"CREATE SCHEMA IF NOT EXISTS #{schema}\" + \" AUTHORIZATION #{owner}\"))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ActiveRecord::Migration",
        "method": "create_schema"
      },
      "user_input": "owner",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "b5ca23a692c708464d98b505716492a64cbf8652957debca83fa28c816a14c96",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/admin/migration_generator.rb",
      "line": 135,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connection.execute(\"SELECT * FROM #{tables_and_views.find do\n (tn[\"table_name\"] == \"#{dd}_datadic\")\n end[\"table_name\"]};\\n\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::MigrationGenerator",
        "method": "Admin::MigrationGenerator.data_dic"
      },
      "user_input": "tables_and_views.find do\n (tn[\"table_name\"] == \"#{dd}_datadic\")\n end[\"table_name\"]",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "ba6d960b95fc119ec491fd865a7eb8fdb26b187477e5552e011ae91a976cda57",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/dynamic/def_handler.rb",
      "line": 113,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"(#{[((app_type.associated_activity_logs(:not_resource_names => ([])) or app_type.associated_dynamic_models(:valid_resources_only => false, :not_resource_names => ([]))) or app_type.associated_external_identifiers(:not_resource_names => ([]))).reorder(\"\").to_sql].join(\"\\nUNION\\n\")}) AS #{table_name}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Dynamic::DefHandler",
        "method": "active_model_configurations"
      },
      "user_input": "[((app_type.associated_activity_logs(:not_resource_names => ([])) or app_type.associated_dynamic_models(:valid_resources_only => false, :not_resource_names => ([]))) or app_type.associated_external_identifiers(:not_resource_names => ([]))).reorder(\"\").to_sql].join(\"\\nUNION\\n\")",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "c4849bbd5ad704cab1a06825b331b0bb903881abf1a54590aab0ed6af1d03276",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/controllers/admin/user_access_controls_controller.rb",
      "line": 11,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"app_type_id asc, resource_type asc, translate(resource_name, '__', 'ZZZZ') asc, #{Admin::UserAccessControl.priority_order}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Admin::UserAccessControlsController",
        "method": "default_index_order"
      },
      "user_input": "Admin::UserAccessControl.priority_order",
      "confidence": "High",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "dda267fed2c025f72694925eecf41219a3f8ed043d900a5f2114111ff2ff79ce",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/dynamic/external_id_implementer.rb",
      "line": 238,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "connection.execute((\"INSERT into #{table_name} (#{external_id_attribute}, admin_id, master_id, created_at, updated_at) VALUES \" + [\"('#{generate_random_id}', #{admin.id}, NULL, '#{DateTime.now.iso8601}', '#{DateTime.now.iso8601}')\"].join(\",\")))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Dynamic::ExternalIdImplementer",
        "method": "generate_ids"
      },
      "user_input": "[\"('#{generate_random_id}', #{admin.id}, NULL, '#{DateTime.now.iso8601}', '#{DateTime.now.iso8601}')\"].join(\",\")",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "ddede0603c1b3226772cfe2a99d55c7903d1e8539f6bbdf8bd5b267c4ac7b04a",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/concerns/calc_actions.rb",
      "line": 403,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "(@condition_scope.order(:id => :desc).limit(1).reorder(\"#{@condition_scope.order(:id => :desc).limit(1).first.send(@this_val_where[:assoc]).first.class.table_name}.id desc\") or @condition_scope.order(:id => :desc).limit(1).reorder(\"#{UserBase.clean_table_name(ModelReference.record_type_to_table_name(@this_val_where[:table_name]))}.id desc\")).select(\"#{UserBase.clean_table_name(ModelReference.record_type_to_table_name(@this_val_where[:table_name]))}.*\").pluck(\"#{@condition_scope.order(:id => :desc).limit(1).first.send(@this_val_where[:assoc]).first.class.table_name}.#{@condition_scope.order(:id => :desc).limit(1).first.send(@this_val_where[:assoc]).first.class.attribute_names.select do\n (s == @this_val_where[:field_name].to_s)\n end.first}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "CalcActions",
        "method": "calc_return_types"
      },
      "user_input": "@condition_scope.order(:id => :desc).limit(1).first.send(@this_val_where[:assoc]).first.class.attribute_names.select do\n (s == @this_val_where[:field_name].to_s)\n end.first",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "e76fa00b707c077dca2724d24b6cfca0685ffc06df826578358d6eccbd8e6f61",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "lib/active_record/migration/app_generator.rb",
      "line": 265,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "ActiveRecord::Base.connection.execute(\"DROP FUNCTION IF EXISTS #{calc_trigger_fn_name(prev_table_name)}() CASCADE\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "ActiveRecord::Migration",
        "method": "update_table_name"
      },
      "user_input": "calc_trigger_fn_name(prev_table_name)",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "Cross-Site Scripting",
      "warning_code": 2,
      "fingerprint": "fc502ff9a2b90e75064dbc148795bff5746ffce603140fb12b5a9857e28abcfe",
      "check_name": "CrossSiteScripting",
      "message": "Unescaped model attribute",
      "file": "app/views/reports/_result_view_css.html.erb",
      "line": 22,
      "link": "https://brakemanscanner.org/docs/warning_types/cross_site_scripting",
      "code": "(Report.find_by_id_or_resource_name(params[:id]).report_options.view_css.classes.map do\n styles = v.map do\n \"#{s.to_s.hyphenate}: #{v};\"\n end\n\"#{\"##{\"report-container-#{SecureRandom.hex}\"}-results-block\"} .#{c} {  #{v.map do\n \"#{s.to_s.hyphenate}: #{v};\"\n end.join(\" \")}}\"\n end or ([] + Report.find_by_id_or_resource_name(params[:id]).report_options.view_css.selectors.map do\n styles = v.map do\n \"#{s.to_s.hyphenate}: #{v};\"\n end\n\"#{\"##{\"report-container-#{SecureRandom.hex}\"}-results-block\"} #{c} {  #{v.map do\n \"#{s.to_s.hyphenate}: #{v};\"\n end.join(\" \")}}\"\n end)).join(\"\\n\")",
      "render_path": [
        {
          "type": "controller",
          "class": "ReportsController",
          "method": "show",
          "line": 81,
          "file": "app/controllers/reports_controller.rb",
          "rendered": {
            "name": "reports/_results",
            "file": "app/views/reports/_results.html.erb"
          }
        },
        {
          "type": "template",
          "name": "reports/_results",
          "line": 45,
          "file": "app/views/reports/_results.html.erb",
          "rendered": {
            "name": "reports/_result_view_css",
            "file": "app/views/reports/_result_view_css.html.erb"
          }
        }
      ],
      "location": {
        "type": "template",
        "template": "reports/_result_view_css"
      },
      "user_input": "Report.find_by_id_or_resource_name(params[:id]).report_options",
      "confidence": "Weak",
      "note": ""
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "fd1876f5932c1791c4a762069cf327cd37b311da46735393ccd306f4ea1d7afa",
      "check_name": "SendFile",
      "message": "Parameter value used in file name",
      "file": "app/controllers/nfs_store/downloads_controller.rb",
      "line": 38,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "send_file(Download.new(:container => (@container), :activity_log => (@activity_log)).retrieve_file_from(params[:download_id].to_i, [:stored_file, :archived_file].select do\n (r == params[:retrieval_type].to_sym)\n end.first, :for_action => ((:download or :download_or_view))))",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "NfsStore::DownloadsController",
        "method": "show"
      },
      "user_input": "params[:download_id]",
      "confidence": "Weak",
      "note": ""
    }
  ],
  "updated": "2021-06-11 11:16:38 +0100",
  "brakeman_version": "5.0.4"
}
