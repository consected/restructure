<div class="import-rules-block hidden">
  <br>
  <h4>Formatting notes for the selected template</h4>
  <div class="import-rules" data-import-rule-type="date">
    <p class="field-names"></p>
    <p>Dates must be formatted as either 'm/d/yyyy' or 'yyyy-mm-dd'</p>
  </div>
  <div class="import-rules" data-import-rule-type="datetime">
    <p class="field-names"></p>
    <p>Date time fields must be formatted as 'yyyy-mm-dd hh:mm:ss' (24 hour format)</p>
  </div>
  <div class="import-rules" data-import-rule-type="rec_type">
    <p class="field-names"></p>
    <p>Phone data must be formatted as: (aaa)bbb-cccc optional-extension. In the main 10-digit number there must be no spaces.</p>
    <p>Email data must be formatted as as a standard email address with no spaces.</p>
  </div>

  <div class="import-rules" data-import-rule-type="master_id">
    <p class="field-names"></p>
    <p>The <i>master_id</i> field must be entered, unless an alternative column such as msid or another external ID (like Scantron) is used instead.</p>
    <p>The template CSV file includes columns for <i>msid</i>, <%= Master.external_id_matching_fields.each do |f| %>
       <i><%= f %></i>
     <% end %></p>
    <p>Any one of these fields can be used to uniquely identify a master record, rather than entering the <i>master_id</i>. If unused, any of these columns (including <i>master_id</i>) may be removed from the CSV file to avoid confusion.</p>
  </div>
  <div class="import-rules indented" data-import-rule-type="secondary_key">
    <p class="field-names"></p>
    <p>By setting this field, the row can be matched with the parent record. For example, for a player contact phone log, the <i>data</i> field will match the row with the associated player contact record, based on a matching phone number. The <i>player_contact_id</i> value is not required.</p>
    <p>This will also avoid the need to set the <i>master_id</i> value explicitly.</p>
    <p>Since this secondary data is not guaranteed to be unique in the database, the import process will check if any of the values entered appear in more than one parent record, indicating an error in this case.</p>
  </div>
  <div class="import-rules" data-import-rule-type="protocol_id">
    <p class="field-names"></p>
    <p>The protocol_id can be one of the following numbers:</p>
    <p>
      <% Protocol.enabled.order(:id).each do |p| %>
      <b><%=p.id%></b>&nbsp;-&nbsp;<%=p.name%>
      <% end %>
    </p>
    <p>Only the number must be entered.</p>
  </div>


  <div class="import-rules" data-import-rule-type="set_related_field">
    <p class="field-names"></p>
    <p>Related field that will be set in the parent table. For example, for a player contact phone log, the <i>set_related_player_contact_rank</i> will set the
      rank of the associated player contact field.
    </p>
    <p>Leaving this value blank means that no change will be made to the parent table, and is the safest option if unsure.</p>
  </div>


  <% GeneralSelection.enabled.pluck(:item_type).uniq.each do |i| %>
  <div class="import-rules" data-import-rule-type="<%=i%>">
    <p class="field-names"></p>
    <p>Value must match one of the following: <b><%= GeneralSelection.enabled.where(item_type: i).pluck(:value).uniq.join(', ')  %></b></p>

  </div>
  <% end %>
</div>


<script>
  _fpa.import_rules = <%= @table_rules.to_json.html_safe %>;

  $('#get_template_for').on('change', function(){
    var tn = $(this).val();
    var t = _fpa.import_rules[tn];
    $('div.import-rules').hide();
    $('div.import-rules ul.field-names').each(function(){
      $(this).html('');
    });

    for(var k in t) {
      if(t.hasOwnProperty(k)) {
        var el  = $('div.import-rules[data-import-rule-type="'+k+'"]');
        var fn = el.find('>.field-names');
        var f = t[k];
        if(typeof f == 'object')
          f = f.join(', ')
        fn.html(f);
        el.show();
      }
    }
    $('.import-rules-block').removeClass('hidden');
  });
</script>
