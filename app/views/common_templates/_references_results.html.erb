
<script id="model-references-<%=name%>-result-template"  type="text/x-handlebars-template" class="hidden handlebars-template">
{{#with model_reference}}
  {{>activity_log_common_template_references_list_item name='<%=name%>' view_as=to_record_options_config.view_as.show}}
{{/with}}
</script>

<script id="activity_log_<%=name%>_references"  type="text/x-handlebars-template" class="hidden handlebars-partial references_def_block">
<%
  unless defined? embed
    embed = nil
  end
  
  first_ref_def = references&.first&.last&.first&.last&.dig(:to_model_name_us) || embed
  if first_ref_def 
    # There is at least one reference definition
    # At run time, run through the model references twice, first handling an embedded item
    # then each of the remaining (unhidden) items

%>
  {{#each model_references}}
    {{#is ../embedded_item.id '===' to_record_id}}
      {{#is ../embedded_item.item_type '===' <%= embed ? '../embedded_item.item_type' : "'#{first_ref_def}'".html_safe %>}}
        {{#is to_record_options_config.view_as.show '!==' 'hide'}}
          {{#is to_record_options_config.view_as.show '!==' 'not_embedded'}}
            {{#with ../embedded_item}}
              <% mr_name = '../to_record_template' #ModelReference.record_type_to_ns_table_name references&.first&.first %>
              {{> common_template_result_fields result_data=this name=<%=mr_name%> template_config=(fpa_state_item 'template_config' (underscore <%=mr_name%>) vdef_version)}}
            {{/with}}
          {{/is}}
        {{/is}}
      {{/is}}
    {{/is}}
  {{/each}}

  {{#each model_references}}
    {{#is to_record_options_config.view_as.show '!==' 'hide'}}
      {{#is to_record_options_config.view_as.show '===' 'not_embedded'}}
        {{>activity_log_common_template_references_list_item name='<%=name%>' view_as=to_record_options_config.view_as.show}}
      {{else is to_record_options_config.view_as.show '===' 'filestore'}}
      {{else}}
        {{#is ../embedded_item.id '!==' to_record_id}}
          {{>activity_log_common_template_references_list_item name='<%=name%>' view_as=to_record_options_config.view_as.show}}
        {{/is}}
      {{/is}}
    {{/is}}
  {{/each}}
  <% end %>

<%  # Iterate all the references, setting up the creatable items' actions
    references&.each do |ref_key, refitem|
      next unless ref_key && refitem
      
      refitem.each do |ref_type, ref_config| 
        next unless ref_type && ref_config
      
        # Handle activity_selector type references
        rct = ref_config[:type_config]
        if rct&.keys&.first == :activity_selector
          rct.first.last.each do |elt, label|
            al_refkey = "#{ref_type}_#{elt}"
            al_reftype = ref_key
            elt_ref_config = ref_config.merge({
              label: label,
              to_record_label: label,
              add_with: {
                extra_log_type: elt.to_s
              },
              filter_by: {
                extra_log_type: '__return_nothing__'
              }
            })
%>
      {{#if creatable_model_references.<%= al_refkey %> }}
        {{#if creatable_model_references.<%= al_refkey %>.<%= al_reftype %> }}
          {{#if creatable_model_references.<%= al_refkey %>.<%= al_reftype %>.ref_type }}
      <%= render partial: 'common_templates/reference_actions',  locals: {
            name: class_resource_name&.ns_pathify&.singularize, 
            ref_type: ref_type, 
            caption: label, 
            block_id: "#{name.hyphenate}-#{ref_type}", 
            ref_config: elt_ref_config, 
            caption_before: caption_before,
            extra_log_type: elt} %>
          {{/if}}
        {{/if}}
      {{/if}}
<%
          end
          # Done handling activity_selector type references
        else 
          # Now handle the regular creatable model references
%>

      {{#if creatable_model_references.<%= ref_key %> }}
        {{#if creatable_model_references.<%= ref_key %>.<%= ref_type %> }}
          {{#if creatable_model_references.<%= ref_key %>.<%= ref_type %>.ref_type }}

      <%= render partial: 'common_templates/reference_actions',  locals: {
            name: class_resource_name&.ns_pathify&.singularize, 
            ref_type: ref_type, 
            caption: ref_config[:to_record_label], 
            block_id: "#{name.hyphenate}-#{ref_type}", 
            ref_config: ref_config, 
            caption_before: caption_before
          } %>
          {{/if}}
        {{/if}}
      {{/if}}
    <%  end
    %>

<%    end
    end 
    # Done iterating references
%>

  {{#if model_references}}
    {{#each model_references}}

      {{#is to_record_options_config.view_as.show '!==' 'hide'}}
        {{#is to_record_options_config.view_as.show '===' 'filestore'}}
          {{>filestore_common_template_view prevent_edit=../prevent_edit name='<%=name%>' can_download=../can_download}}
        {{/is}}
      {{/is}}
    {{/each}}
  {{/if}}

</script>
