<%

  unless defined? caption
    caption = nil
  end

  unless defined? model_data_type
    model_data_type = nil
  end


  unless defined? category
    category = nil
  end

  unless defined? caption_before
    caption_before = {}
  end

  unless defined? dialog_before
    dialog_before = {}
  end

  unless defined? labels
    labels = {}
  end

  unless defined? show_if
    show_if = {}
  end

  unless defined? external_id_options
    external_id_options = nil
  end


  unless defined? item_flags_after
    item_flags_after = nil
  end

  unless caption && caption.include?('{{')
    caption = (caption || name)
    if caption.include?('_') || caption.downcase == caption
      caption = caption.humanize.titleize
    end
  end

  unless defined?(data_sort) && data_sort
    data_sort_str = nil
    data_sort_attr = 'none'
  else
    data_sort_str = "data-sort-#{data_sort.first}='#{data_sort.last.to_s.hyphenate}'".html_safe
    data_sort_attr = "#{data_sort.last.to_s.hyphenate.sub('data-','')}"
  end

  unless defined? subsort_id
    subsort_id = false
  end

  unless defined? custom_block_attrs
    custom_block_attrs = {}
  end

  unless defined? extra_class
    extra_class = ''
  end

  unless defined? full_name
    full_name = name
  end

  unless defined? item_class_name
    item_class_name = full_name
  end

  unless defined? custom_activity_log
    # check whether the activity log broadly works with this type of item
    custom_activity_log = ActivityLog.works_with(name) || :none
  end

  unless defined? references
    references = nil
  end

  unless defined? show_created_at
    show_created_at = false
  end

  unless defined? edit_button_href
    edit_button_href = "{{#if master_id}}/masters/{{master_id}}{{/if}}/#{name.pluralize}/{{this.id}}/edit"
  end

  # with_data provides an alternatively named set of data for a template to use, rather than just the name
  # this is useful when providing multiple templates that should use the same set of data on a single page
  unless defined? with_data
    with_data = nil
  end

  unless defined? implementation_class
    implementation_class = nil
  else
    is_activity_log_class = (implementation_class && implementation_class.parent == ActivityLog) ? 'is-activity-log' : ''
  end

  unless defined? implementation_class_name
    implementation_class_name = nil
  end


  unless defined? item_flags_readonly
    item_flags_readonly = false
  end

  unless defined? hide_rank_badge
    hide_rank_badge = false
  end

  unless defined? only_see_presence
    only_see_presence = false
  end

  unless defined? item_blocks
    item_blocks = {}
  end

  unless defined? exclude_metadata
    exclude_metadata = nil
  end

  unless defined? view_options
    view_options = {}
  end

  item_list = [] if only_see_presence

  al_full_name = "activity_log__#{full_name.underscore}"
  al_full_names = "activity_log__#{full_name.underscore}".pluralize

  show_item_type_flags = Classification::ItemFlagName.enabled_for?(item_class_name, current_user)

  if category
    res = page_layout_panel(category: category)
    add_item_label = caption.singularize
    if res
      orientation = res.view_options&.orientation || 'vertical'
      add_item_label =  res.view_options&.add_item_label || add_item_label
    end

  end

  caption_before_keys = caption_before.keys.join(',')
  caption_before_keys_without_keep_label = caption_before.select {|k,v| v && !v[:keep_label]}.keys.map(&:to_s).join(',')
  external_id_attr = external_id_options && external_id_options[:attribute]
  hide_tracker_panel = app_config_set(:hide_tracker_panel)
  show_item_type_flags_after = show_item_type_flags && item_flags_after
  show_item_type_flags_before = show_item_type_flags && !item_flags_after

  item_list = item_list.is_a?(Array) ? item_list.join(',') : item_list

  formatted_item_blocks = {}
  item_blocks.each do |item_name_sym, item_attrs|
    ia = item_attrs.is_a?(Array) ? item_attrs.join(',') : item_attrs
    ia ||= ""
    formatted_item_blocks[item_name_sym] = ia
  end

  unless custom_activity_log == :none

    # get a list of rec_types that an activity log of this type is constrained to use
    # create a button for all item type / rec type combos
    # the handlebars templates will select the appropriate button based on the rec type of an
    # individual item
    works_with_rec_types_array = ActivityLog.works_with_rec_types(name)
    works_with_rec_types = works_with_rec_types_array.join(',') || ''
    activity_log_template_name = custom_activity_log ? name.hyphenate : 'generic'
    works_with_rec_types_array << '' if works_with_rec_types_array.length == 0

  end
%>

<script>
  _fpa.state.caption_before = _fpa.state.caption_before || {};
  _fpa.state.dialog_before = _fpa.state.dialog_before || {};

  _fpa.state.caption_before.<%=name.underscore%> = <%= caption_before.to_json.html_safe %>;
  _fpa.state.labels_<%=name.underscore%> = <%= labels.to_json.html_safe %>;

  _fpa.state.template_config = _fpa.state.template_config || {};
  _fpa.state.template_config.<%=name.underscore%>  = {
    name: '<%=name%>',
    full_name: '<%=full_name%>',
    caption: Handlebars.compile('<%=caption%>'),
    item_class_name: '<%=item_class_name%>',
    item_list: '<%=item_list%>',
    hide_rank_badge: <%=!!hide_rank_badge%>,
    hide_tracker_panel: <%=!!hide_tracker_panel%>,
    implementation_class_name: '<%=implementation_class_name%>',
    edit_button_href: Handlebars.compile('<%=edit_button_href%>'),
    show_item_type_flags_after: <%=!!show_item_type_flags_after%>,
    show_item_type_flags_before: <%=!!show_item_type_flags_before%>,
    item_flags_after: '<%=item_flags_after%>',
    item_flags_readonly: <%=!!item_flags_readonly%>,
    caption_before_keys: '<%=caption_before_keys%>',
    caption_before_keys_without_keep_label: '<%=caption_before_keys_without_keep_label%>',
    external_id_attr: '<%=external_id_attr%>',
    external_id_options: <%=external_id_options.to_json.html_safe%>,
    subsort_id: <%=subsort_id%>,
    data_sort_attr: '<%=data_sort_attr%>',
    data_sort_str: "<%=data_sort_str%>",
    custom_activity_log: '<%=custom_activity_log%>',
    works_with_rec_types: '<%=works_with_rec_types%>',
    model_data_type: '<%=model_data_type%>',
    item_blocks: <%=formatted_item_blocks.to_json.html_safe%>,
    extra_class: Handlebars.compile('<%=extra_class%>'),
    is_activity_log_class: '<%=is_activity_log_class%>',
    custom_block_attrs: <%=custom_block_attrs.to_json.html_safe%>,
    exclude_metadata: <%=!!exclude_metadata%>,
    show_created_at: <%=!!show_created_at%>,
    orientation: '<%=orientation%>',
    view_options: <%=view_options.to_json.html_safe%>,
    add_item_label: '<%=add_item_label%>'
  }

  <% if full_name.to_s.end_with?('_primary') %>_fpa.show_if.forms['<%=full_name.sub(/_primary$/, '')%>'] = <% end %>
    _fpa.show_if.forms['<%=full_name%>'] = <%= show_if.to_json.html_safe %>;


</script>


<%= render partial: 'common_templates/references_results', locals: { name: name.underscore, full_name: full_name, references: references, item_list: item_list, implementation_class_name: implementation_class_name, caption_before: caption_before, external_id_attr: external_id_attr, caption_before_keys_without_keep_label: caption_before_keys_without_keep_label, caption_before_keys: caption_before_keys, item_flags_readonly: item_flags_readonly, hide_tracker_panel: hide_tracker_panel, hide_rank_badge: hide_rank_badge, edit_button_href: edit_button_href, show_item_type_flags_after: show_item_type_flags_after, item_flags_after: item_flags_after } %>


<script id="activity_log_<%=name%>_show_button_partial" type="text/x-handlebars-template" class="hidden handlebars-partial">

  <%
  # Work out if the user has access to the activity log, and therefore should we show the link
  controls = true
  (works_with_rec_types_array||[]).each do |r|
    controls &&= !!current_user.has_access_to?(:access, :table, [al_full_name, r].join('_').pluralize)
  end

  if controls %>
  {{#if rec_type}}
  <a data-toggle="uncollapse" data-target="#<%= al_full_name.hyphenate %>-{{rec_type}}s-{{master_id}}" title="open <%= caption %> log" style="margin-right:1em" class="activity-log-entity-link <%= al_full_name.hyphenate %>-{{rec_type}}-link pull-right glyphicon glyphicon-th-list always-scroll-to-expanded" href="/masters/{{master_id}}/<%= name.pluralize %>/{{this.id}}/activity_log/<%=name.underscore%>_{{rec_type}}s" data-remote="true" data-<%=name.hyphenate%>-id="{{this.id}}" data-result-target="#<%= al_full_name.hyphenate %>-{{rec_type}}s-{{master_id}}" data-template="{{> activity_log_data_template_name_partial al_full_name='<%=al_full_name%>'}}"></a>
  {{else}}
  <a data-toggle="uncollapse" data-target="#<%= al_full_names.hyphenate %>-{{master_id}}" title="open <%= caption %> log" style="margin-right:1em" class="activity-log-entity-link <%= full_name.hyphenate %>-link pull-right glyphicon glyphicon-th-list always-scroll-to-expanded" href="/masters/{{master_id}}/<%= name.pluralize %>/{{this.id}}/activity_log/<%=name.underscore.pluralize%>" data-remote="true" data-<%=name.hyphenate%>-id="{{this.id}}" data-result-target="#<%= al_full_names.hyphenate %>-{{master_id}}" data-template="{{> activity_log_data_template_name_partial al_full_name='<%=al_full_name%>'}}"></a>
  {{/if}}
  <% end %>
</script>

<script id="<%=name.hyphenate%>-result-template" type="text/x-handlebars-template" class="hidden handlebars-template">
  {{#with <%=with_data || full_name%>}}

    {{> common_template_result name='<%=name%>' result_data=this}}

  {{/with}}
</script>

<script id="<%=name.pluralize.hyphenate%>-list-template" type="text/x-handlebars-template" class="hidden handlebars-template">
  {{>common_template_list name='<%=name%>' list_data=this template_config=(fpa_state_item 'template_config' (underscore name))}}
</script>

<script id="<%=name.pluralize.hyphenate%>-compact-list-template" type="text/x-handlebars-template" class="hidden handlebars-template">
  {{>common_template_list name='<%=name%>' list_data=this template_config=(fpa_state_item 'template_config' (underscore name)) compact=true prevent_create=true }}
</script>
