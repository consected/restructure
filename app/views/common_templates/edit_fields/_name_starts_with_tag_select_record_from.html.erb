<%
# Allow a 'data' selection to be made from a dynamic model table that is not tied to this master
rl = field_name.sub('tag_select_record_from_', '').singularize

options = field_options_for(form_object_instance, field_name_sym)
group_split_char = options.dig(:edit_as, :group_split_char)
value_attr = options.dig(:edit_as, :value_attr) || :data
label_attr = options.dig(:edit_as, :label_attr) || :data
no_assoc = options.dig(:edit_as, :no_assoc)

human_name, reslist = list_record_data_for_select(form_object_instance, rl, value_attr: value_attr, label_attr: label_attr, group_split_char: group_split_char, no_assoc: no_assoc)

unless human_name
  logger.warn "Failed to find valid class name for #{field_name}"
end
options = field_options_for(form_object_instance, field_name_sym)
options[:include_blank] = true unless options.has_key?(:include_blank)
%>
<%= form.label field_name_sym, label_for(field_name_sym, labels, force_default: rl) %>
<%= form.select field_name_sym, reslist, options, { data: {attr_name: field_name_sym, object_name: form_object_item_type_us}, multiple: 'multiple'}%>
